#! /usr/bin/env bash

while getopts "p:o:n:u:i:" flag; do
    case $flag in
        p)
            port=$OPTARG;;
        o)
            origin=$OPTARG;;
        n)
            name=$OPTARG;;
        u)
            username=$OPTARG;;
        i)
            keyfile=$OPTARG;;
        /?)
            echo "Error: Invalid option"
            exit;;
    esac
done

# make executable file for DNS server
echo "Making DNS server executable"
cp ./dnsserver.py ./dnsserver
chmod +x ./dnsserver
# send to DNS server node
echo "Sending DNS executable to DNS node"
rsync -e "ssh -i $keyfile" ./dnsserver $username@p5-dns.5700.network:~/

# make executable file for HTTP server
echo "Making HTTP server executable"
cp ./httpserver.py ./httpserver
chmod +x ./httpserver
# send to all replica nodes
deploy_web_server () {
    echo "Sending server code and cache lists to replica $1"
    rsync -e "ssh -i $keyfile" ./httpserver $username@p5-http-$1.5700.network:~/
    rsync -e "ssh -i $keyfile" ./sc_attach.py $username@p5-http-$1.5700.network:~/
    rsync -e "ssh -i $keyfile" ./memory_cache.csv $username@p5-http-$1.5700.network:~/
    rsync -e "ssh -i $keyfile" ./disk_cache.csv $username@p5-http-$1.5700.network:~/
    echo "Downloading disk cache from Github at replica $1"
    ssh -i $keyfile $username@p5-http-$1.5700.network "[ -e ~/disk_cache/ ] || wget -qO- https://raw.githubusercontent.com/coffinated/5700-project5/main/disk_cache.tar | tar x"
    # commented out as this is a work in progress
    # echo "Starting scamper at replica $1"
    # ssh -i $keyfile $username@p5-http-$1.5700.network "scamper -D -P 31337"
}
replicas=("a" "b" "c" "d" "e" "f" "g")
for i in "${replicas[@]}"; do
    deploy_web_server "$i" &
done
wait
echo "Done!"
